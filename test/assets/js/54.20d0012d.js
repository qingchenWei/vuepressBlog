(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{538:function(n,e,r){"use strict";r.r(e);var t=r(4),s=Object(t.a)({},(function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("p",[n._v("模块化开发\n#概念\n将项目的所有功能全部封装成独立的模块，模块之间按照一定的关系组合或者调用，实现整个项目的搭建")]),n._v(" "),r("p",[n._v("#优点\n封装（封装优势）\n重用性强\n耦合低\n方便单独扩展\n#作用\n为了统一模块化的标准，减少模块之间的兼容问题，方便数据或方法的管理和使用")]),n._v(" "),r("p",[n._v("#规范\nCMD：依赖前置（基本废弃）\nAMD：按需加载\ncommenJs：后台，nodejs\nES6：新版本的js在语法层面上实现了模块化\n#应用场景\n加载顺序的问题\n模块过多导致产生过多的script"),r("br"),n._v("\n#内容\n#暴露入口\n设置入口")]),n._v(" "),r("p",[n._v("#引入入口\n引入入口")]),n._v(" "),r("p",[n._v("#AMD\n#规范文件\nrequire.js")]),n._v(" "),r("p",[n._v("#require()\n引入入口,引入模块")]),n._v(" "),r("p",[n._v("require == requirejs //true")]),n._v(" "),r("p",[n._v("与传统的")])])}),[],!1,null,null,null);e.default=s.exports}}]);